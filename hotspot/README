* hotspot (HS)
This benchmark has been converted to SAC (hotspot.sac). The result of the SAC 
generated code has been compared with the orginal Rodina version and they seem 
to match quite well (however, due to tiny roundoff errors, there is slight 
difference). Based on the original Rodinia version (hotspot_cuda_shr_float.cu),  
we also added a modified version (hotspot_cuda_noshr_float.cu) which is a straight 
translation from the OpenMP code (hotspot_openmp_float.cpp) without utilising 
shared memory. The prupose of this is to compare to the performance of kernel 
with and without shared memory on the new Fermi architecture, which features 
hardware managed L1/L2 cache. The runtime results seem to show that *utilising* 
shared memory is *less* efficient. 
Inputs to the program are in directory input. For CUDA and OpenMP versions,
the inputs are separated into two files: temp and power. For SAC, both temp
and power data are stored in one file for easy reading (sac_temp_power*).
The CUDA and OpenMP executables can be invoked by the commands stored in
run_shr, run_noshr and run_openmp. Ouputs from these executables are written
output_shr.out, output_noshr.out and output_openmp.out.
Currently, we only have float version and double version might be added 
in the future.  
